{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/AppDevelopment/PDFToolkit/node_modules/%40pdf-lib/standard-fonts/es/utils.js"],"sourcesContent":["/*\n * The `chars`, `lookup`, and `decodeFromBase64` members of this file are\n * licensed under the following:\n *\n *     base64-arraybuffer\n *     https://github.com/niklasvh/base64-arraybuffer\n *\n *     Copyright (c) 2012 Niklas von Hertzen\n *     Licensed under the MIT license.\n *\n */\nimport pako from 'pako';\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport var decodeFromBase64 = function (base64) {\n    var bufferLength = base64.length * 0.75;\n    var len = base64.length;\n    var i;\n    var p = 0;\n    var encoded1;\n    var encoded2;\n    var encoded3;\n    var encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var bytes = new Uint8Array(bufferLength);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return bytes;\n};\nvar arrayToString = function (array) {\n    var str = '';\n    for (var i = 0; i < array.length; i++) {\n        str += String.fromCharCode(array[i]);\n    }\n    return str;\n};\nexport var decompressJson = function (compressedJson) {\n    return arrayToString(pako.inflate(decodeFromBase64(compressedJson)));\n};\nexport var padStart = function (value, length, padChar) {\n    var padding = '';\n    for (var idx = 0, len = length - value.length; idx < len; idx++) {\n        padding += padChar;\n    }\n    return padding + value;\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC;;;;;AACD;;AACA,IAAI,QAAQ;AACZ,wCAAwC;AACxC,IAAI,SAAS,IAAI,WAAW;AAC5B,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;IACnC,MAAM,CAAC,MAAM,UAAU,CAAC,GAAG,GAAG;AAClC;AACO,IAAI,mBAAmB,SAAU,MAAM;IAC1C,IAAI,eAAe,OAAO,MAAM,GAAG;IACnC,IAAI,MAAM,OAAO,MAAM;IACvB,IAAI;IACJ,IAAI,IAAI;IACR,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE,KAAK,KAAK;QACnC;QACA,IAAI,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE,KAAK,KAAK;YACnC;QACJ;IACJ;IACA,IAAI,QAAQ,IAAI,WAAW;IAC3B,IAAK,IAAI,GAAG,IAAI,KAAK,KAAK,EAAG;QACzB,WAAW,MAAM,CAAC,OAAO,UAAU,CAAC,GAAG;QACvC,WAAW,MAAM,CAAC,OAAO,UAAU,CAAC,IAAI,GAAG;QAC3C,WAAW,MAAM,CAAC,OAAO,UAAU,CAAC,IAAI,GAAG;QAC3C,WAAW,MAAM,CAAC,OAAO,UAAU,CAAC,IAAI,GAAG;QAC3C,KAAK,CAAC,IAAI,GAAG,AAAC,YAAY,IAAM,YAAY;QAC5C,KAAK,CAAC,IAAI,GAAG,AAAC,CAAC,WAAW,EAAE,KAAK,IAAM,YAAY;QACnD,KAAK,CAAC,IAAI,GAAG,AAAC,CAAC,WAAW,CAAC,KAAK,IAAM,WAAW;IACrD;IACA,OAAO;AACX;AACA,IAAI,gBAAgB,SAAU,KAAK;IAC/B,IAAI,MAAM;IACV,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACnC,OAAO,OAAO,YAAY,CAAC,KAAK,CAAC,EAAE;IACvC;IACA,OAAO;AACX;AACO,IAAI,iBAAiB,SAAU,cAAc;IAChD,OAAO,cAAc,6HAAA,CAAA,UAAI,CAAC,OAAO,CAAC,iBAAiB;AACvD;AACO,IAAI,WAAW,SAAU,KAAK,EAAE,MAAM,EAAE,OAAO;IAClD,IAAI,UAAU;IACd,IAAK,IAAI,MAAM,GAAG,MAAM,SAAS,MAAM,MAAM,EAAE,MAAM,KAAK,MAAO;QAC7D,WAAW;IACf;IACA,OAAO,UAAU;AACrB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///E:/AppDevelopment/PDFToolkit/node_modules/%40pdf-lib/standard-fonts/es/Font.js"],"sourcesContent":["import { decompressJson } from './utils';\nimport CourierBoldCompressed from './Courier-Bold.compressed.json';\nimport CourierBoldObliqueCompressed from './Courier-BoldOblique.compressed.json';\nimport CourierObliqueCompressed from './Courier-Oblique.compressed.json';\nimport CourierCompressed from './Courier.compressed.json';\nimport HelveticaBoldCompressed from './Helvetica-Bold.compressed.json';\nimport HelveticaBoldObliqueCompressed from './Helvetica-BoldOblique.compressed.json';\nimport HelveticaObliqueCompressed from './Helvetica-Oblique.compressed.json';\nimport HelveticaCompressed from './Helvetica.compressed.json';\nimport TimesBoldCompressed from './Times-Bold.compressed.json';\nimport TimesBoldItalicCompressed from './Times-BoldItalic.compressed.json';\nimport TimesItalicCompressed from './Times-Italic.compressed.json';\nimport TimesRomanCompressed from './Times-Roman.compressed.json';\nimport SymbolCompressed from './Symbol.compressed.json';\nimport ZapfDingbatsCompressed from './ZapfDingbats.compressed.json';\n// prettier-ignore\nvar compressedJsonForFontName = {\n    'Courier': CourierCompressed,\n    'Courier-Bold': CourierBoldCompressed,\n    'Courier-Oblique': CourierObliqueCompressed,\n    'Courier-BoldOblique': CourierBoldObliqueCompressed,\n    'Helvetica': HelveticaCompressed,\n    'Helvetica-Bold': HelveticaBoldCompressed,\n    'Helvetica-Oblique': HelveticaObliqueCompressed,\n    'Helvetica-BoldOblique': HelveticaBoldObliqueCompressed,\n    'Times-Roman': TimesRomanCompressed,\n    'Times-Bold': TimesBoldCompressed,\n    'Times-Italic': TimesItalicCompressed,\n    'Times-BoldItalic': TimesBoldItalicCompressed,\n    'Symbol': SymbolCompressed,\n    'ZapfDingbats': ZapfDingbatsCompressed,\n};\nexport var FontNames;\n(function (FontNames) {\n    FontNames[\"Courier\"] = \"Courier\";\n    FontNames[\"CourierBold\"] = \"Courier-Bold\";\n    FontNames[\"CourierOblique\"] = \"Courier-Oblique\";\n    FontNames[\"CourierBoldOblique\"] = \"Courier-BoldOblique\";\n    FontNames[\"Helvetica\"] = \"Helvetica\";\n    FontNames[\"HelveticaBold\"] = \"Helvetica-Bold\";\n    FontNames[\"HelveticaOblique\"] = \"Helvetica-Oblique\";\n    FontNames[\"HelveticaBoldOblique\"] = \"Helvetica-BoldOblique\";\n    FontNames[\"TimesRoman\"] = \"Times-Roman\";\n    FontNames[\"TimesRomanBold\"] = \"Times-Bold\";\n    FontNames[\"TimesRomanItalic\"] = \"Times-Italic\";\n    FontNames[\"TimesRomanBoldItalic\"] = \"Times-BoldItalic\";\n    FontNames[\"Symbol\"] = \"Symbol\";\n    FontNames[\"ZapfDingbats\"] = \"ZapfDingbats\";\n})(FontNames || (FontNames = {}));\nvar fontCache = {};\nvar Font = /** @class */ (function () {\n    function Font() {\n        var _this = this;\n        this.getWidthOfGlyph = function (glyphName) {\n            return _this.CharWidths[glyphName];\n        };\n        this.getXAxisKerningForPair = function (leftGlyphName, rightGlyphName) {\n            return (_this.KernPairXAmounts[leftGlyphName] || {})[rightGlyphName];\n        };\n    }\n    Font.load = function (fontName) {\n        var cachedFont = fontCache[fontName];\n        if (cachedFont)\n            return cachedFont;\n        var json = decompressJson(compressedJsonForFontName[fontName]);\n        var font = Object.assign(new Font(), JSON.parse(json));\n        font.CharWidths = font.CharMetrics.reduce(function (acc, metric) {\n            acc[metric.N] = metric.WX;\n            return acc;\n        }, {});\n        font.KernPairXAmounts = font.KernPairs.reduce(function (acc, _a) {\n            var name1 = _a[0], name2 = _a[1], width = _a[2];\n            if (!acc[name1])\n                acc[name1] = {};\n            acc[name1][name2] = width;\n            return acc;\n        }, {});\n        fontCache[fontName] = font;\n        return font;\n    };\n    return Font;\n}());\nexport { Font };\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AACA,kBAAkB;AAClB,IAAI,4BAA4B;IAC5B,WAAW,wJAAA,CAAA,UAAiB;IAC5B,gBAAgB,gKAAA,CAAA,UAAqB;IACrC,mBAAmB,mKAAA,CAAA,UAAwB;IAC3C,uBAAuB,uKAAA,CAAA,UAA4B;IACnD,aAAa,0JAAA,CAAA,UAAmB;IAChC,kBAAkB,kKAAA,CAAA,UAAuB;IACzC,qBAAqB,qKAAA,CAAA,UAA0B;IAC/C,yBAAyB,yKAAA,CAAA,UAA8B;IACvD,eAAe,+JAAA,CAAA,UAAoB;IACnC,cAAc,8JAAA,CAAA,UAAmB;IACjC,gBAAgB,gKAAA,CAAA,UAAqB;IACrC,oBAAoB,oKAAA,CAAA,UAAyB;IAC7C,UAAU,uJAAA,CAAA,UAAgB;IAC1B,gBAAgB,6JAAA,CAAA,UAAsB;AAC1C;AACO,IAAI;AACX,CAAC,SAAU,SAAS;IAChB,SAAS,CAAC,UAAU,GAAG;IACvB,SAAS,CAAC,cAAc,GAAG;IAC3B,SAAS,CAAC,iBAAiB,GAAG;IAC9B,SAAS,CAAC,qBAAqB,GAAG;IAClC,SAAS,CAAC,YAAY,GAAG;IACzB,SAAS,CAAC,gBAAgB,GAAG;IAC7B,SAAS,CAAC,mBAAmB,GAAG;IAChC,SAAS,CAAC,uBAAuB,GAAG;IACpC,SAAS,CAAC,aAAa,GAAG;IAC1B,SAAS,CAAC,iBAAiB,GAAG;IAC9B,SAAS,CAAC,mBAAmB,GAAG;IAChC,SAAS,CAAC,uBAAuB,GAAG;IACpC,SAAS,CAAC,SAAS,GAAG;IACtB,SAAS,CAAC,eAAe,GAAG;AAChC,CAAC,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC;AAC/B,IAAI,YAAY,CAAC;AACjB,IAAI,OAAsB;IACtB,SAAS;QACL,IAAI,QAAQ,IAAI;QAChB,IAAI,CAAC,eAAe,GAAG,SAAU,SAAS;YACtC,OAAO,MAAM,UAAU,CAAC,UAAU;QACtC;QACA,IAAI,CAAC,sBAAsB,GAAG,SAAU,aAAa,EAAE,cAAc;YACjE,OAAO,CAAC,MAAM,gBAAgB,CAAC,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe;QACxE;IACJ;IACA,KAAK,IAAI,GAAG,SAAU,QAAQ;QAC1B,IAAI,aAAa,SAAS,CAAC,SAAS;QACpC,IAAI,YACA,OAAO;QACX,IAAI,OAAO,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAD,EAAE,yBAAyB,CAAC,SAAS;QAC7D,IAAI,OAAO,OAAO,MAAM,CAAC,IAAI,QAAQ,KAAK,KAAK,CAAC;QAChD,KAAK,UAAU,GAAG,KAAK,WAAW,CAAC,MAAM,CAAC,SAAU,GAAG,EAAE,MAAM;YAC3D,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,EAAE;YACzB,OAAO;QACX,GAAG,CAAC;QACJ,KAAK,gBAAgB,GAAG,KAAK,SAAS,CAAC,MAAM,CAAC,SAAU,GAAG,EAAE,EAAE;YAC3D,IAAI,QAAQ,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC/C,IAAI,CAAC,GAAG,CAAC,MAAM,EACX,GAAG,CAAC,MAAM,GAAG,CAAC;YAClB,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG;YACpB,OAAO;QACX,GAAG,CAAC;QACJ,SAAS,CAAC,SAAS,GAAG;QACtB,OAAO;IACX;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///E:/AppDevelopment/PDFToolkit/node_modules/%40pdf-lib/standard-fonts/es/Encoding.js"],"sourcesContent":["/* tslint:disable max-classes-per-file */\nimport { decompressJson, padStart } from './utils';\nimport AllEncodingsCompressed from './all-encodings.compressed.json';\nvar decompressedEncodings = decompressJson(AllEncodingsCompressed);\nvar allUnicodeMappings = JSON.parse(decompressedEncodings);\nvar Encoding = /** @class */ (function () {\n    function Encoding(name, unicodeMappings) {\n        var _this = this;\n        this.canEncodeUnicodeCodePoint = function (codePoint) {\n            return codePoint in _this.unicodeMappings;\n        };\n        this.encodeUnicodeCodePoint = function (codePoint) {\n            var mapped = _this.unicodeMappings[codePoint];\n            if (!mapped) {\n                var str = String.fromCharCode(codePoint);\n                var hexCode = \"0x\" + padStart(codePoint.toString(16), 4, '0');\n                var msg = _this.name + \" cannot encode \\\"\" + str + \"\\\" (\" + hexCode + \")\";\n                throw new Error(msg);\n            }\n            return { code: mapped[0], name: mapped[1] };\n        };\n        this.name = name;\n        this.supportedCodePoints = Object.keys(unicodeMappings)\n            .map(Number)\n            .sort(function (a, b) { return a - b; });\n        this.unicodeMappings = unicodeMappings;\n    }\n    return Encoding;\n}());\nexport var Encodings = {\n    Symbol: new Encoding('Symbol', allUnicodeMappings.symbol),\n    ZapfDingbats: new Encoding('ZapfDingbats', allUnicodeMappings.zapfdingbats),\n    WinAnsi: new Encoding('WinAnsi', allUnicodeMappings.win1252),\n};\n"],"names":[],"mappings":"AAAA,uCAAuC;;;AACvC;AACA;;;AACA,IAAI,wBAAwB,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAD,EAAE,iKAAA,CAAA,UAAsB;AACjE,IAAI,qBAAqB,KAAK,KAAK,CAAC;AACpC,IAAI,WAA0B;IAC1B,SAAS,SAAS,IAAI,EAAE,eAAe;QACnC,IAAI,QAAQ,IAAI;QAChB,IAAI,CAAC,yBAAyB,GAAG,SAAU,SAAS;YAChD,OAAO,aAAa,MAAM,eAAe;QAC7C;QACA,IAAI,CAAC,sBAAsB,GAAG,SAAU,SAAS;YAC7C,IAAI,SAAS,MAAM,eAAe,CAAC,UAAU;YAC7C,IAAI,CAAC,QAAQ;gBACT,IAAI,MAAM,OAAO,YAAY,CAAC;gBAC9B,IAAI,UAAU,OAAO,CAAA,GAAA,gKAAA,CAAA,WAAQ,AAAD,EAAE,UAAU,QAAQ,CAAC,KAAK,GAAG;gBACzD,IAAI,MAAM,MAAM,IAAI,GAAG,sBAAsB,MAAM,SAAS,UAAU;gBACtE,MAAM,IAAI,MAAM;YACpB;YACA,OAAO;gBAAE,MAAM,MAAM,CAAC,EAAE;gBAAE,MAAM,MAAM,CAAC,EAAE;YAAC;QAC9C;QACA,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,mBAAmB,GAAG,OAAO,IAAI,CAAC,iBAClC,GAAG,CAAC,QACJ,IAAI,CAAC,SAAU,CAAC,EAAE,CAAC;YAAI,OAAO,IAAI;QAAG;QAC1C,IAAI,CAAC,eAAe,GAAG;IAC3B;IACA,OAAO;AACX;AACO,IAAI,YAAY;IACnB,QAAQ,IAAI,SAAS,UAAU,mBAAmB,MAAM;IACxD,cAAc,IAAI,SAAS,gBAAgB,mBAAmB,YAAY;IAC1E,SAAS,IAAI,SAAS,WAAW,mBAAmB,OAAO;AAC/D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///E:/AppDevelopment/PDFToolkit/node_modules/%40pdf-lib/standard-fonts/es/index.js"],"sourcesContent":["export * from './Font';\nexport * from './Encoding';\n"],"names":[],"mappings":";AAAA;AACA","ignoreList":[0],"debugId":null}}]
}